{
    "name": "genaiscript-vscode",
    "publisher": "devicescript",
    "author": {
        "name": "Microsoft Corporation"
    },
    "displayName": "GenAIScript Insiders",
    "description": "Iterative, refining copilot experience designed for Visual Studio Code.",
    "version": "1.9.10",
    "icon": "icon.png",
    "engines": {
        "vscode": "^1.86.0"
    },
    "categories": [
        "Other"
    ],
    "license": "MIT",
    "extensionKind": [
        "workspace"
    ],
    "activationEvents": [
        "workspaceContains:**/*.gpspec.md",
        "workspaceContains:**/*.genai.js"
    ],
    "main": "./built/extension.js",
    "browser": "./built/extension.js",
    "repository": {
        "url": "https://github.com/microsoft/genaiscript",
        "directory": "packages/vscode"
    },
    "files": [
        "./genaiscript.js"
    ],
    "contributes": {
        "markdown.previewStyles": [
            "./markdown.css"
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "genaiscript",
                    "title": "GenAIScript",
                    "icon": "./icon.svg"
                }
            ]
        },
        "views": {
            "genaiscript": [
                {
                    "id": "genaiscript.prompts",
                    "name": "GenAIScript"
                },
                {
                    "id": "genaiscript.prompts.requests",
                    "name": "Runs",
                    "visibility": "collapsed"
                },
                {
                    "id": "genaiscript.openai.requests",
                    "name": "OpenAI Requests",
                    "visibility": "collapsed"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "genaiscript.fragments",
                "contents": "Create a gpspec file (.gpspec.md) to start generating tasks and code."
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "genaiscript.fragment.prompt",
                    "when": "!inDebugMode"
                }
            ],
            "file/newFile": [
                {
                    "command": "genaiscript.newfile.script"
                },
                {
                    "command": "genaiscript.newfile.gpspec"
                }
            ],
            "commandPalette": [
                {
                    "command": "genaiscript.newfile.script",
                    "when": "false"
                },
                {
                    "command": "genaiscript.newfile.gpspec",
                    "when": "false"
                },
                {
                    "command": "genaiscript.fragment.reveal",
                    "when": "false"
                },
                {
                    "command": "genaiscript.prompt.unbuiltin",
                    "when": "false"
                },
                {
                    "command": "genaiscript.prompt.navigate",
                    "when": "false"
                },
                {
                    "command": "genaiscript.fragment.navigate",
                    "when": "false"
                },
                {
                    "command": "genaiscript.request.open",
                    "when": "false"
                },
                {
                    "command": "genaiscript.request.status",
                    "when": "false"
                }
            ],
            "view/title": [
                {
                    "command": "genaiscript.prompt.create",
                    "when": "view == genaiscript.prompts",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "genaiscript.fragment.prompt",
                    "when": "view == genaiscript.fragments && viewItem  =~ /^fragment/",
                    "group": "inline"
                },
                {
                    "command": "genaiscript.prompt.fork",
                    "when": "view == genaiscript.prompts && viewItem  =~ /^prompt/"
                },
                {
                    "command": "genaiscript.prompt.unbuiltin",
                    "when": "view == genaiscript.prompts && viewItem  =~ /^prompt.builtin/"
                }
            ],
            "explorer/context": [
                {
                    "command": "genaiscript.fragment.prompt",
                    "when": "explorerViewletVisible",
                    "group": "genaiscript@1"
                },
                {
                    "submenu": "genaiscript.explorer.retreival",
                    "when": "explorerViewletVisible",
                    "group": "genaiscript@2"
                }
            ],
            "genaiscript.explorer.retreival": [
                {
                    "command": "genaiscript.retreival.index",
                    "when": "explorerViewletVisible"
                },
                {
                    "command": "genaiscript.retreival.search",
                    "when": "explorerViewletVisible"
                }
            ]
        },
        "submenus": [
            {
                "id": "genaiscript.explorer.retreival",
                "label": "Retreival"
            }
        ],
        "configuration": [
            {
                "title": "GenAIScript",
                "properties": {
                    "genaiscript.maxCachedTemperature": {
                        "type": "number",
                        "default": 0.01,
                        "description": "Maximum prompt temperature to be cached (default 0.01)."
                    },
                    "genaiscript.maxCachedTopP": {
                        "type": "number",
                        "default": 0.5,
                        "description": "Maximum prompt top_p to be cached (default 0.5)."
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "genaiscript.request.abort",
                "title": "Abort OpenAI request",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.retry",
                "title": "Retry last GenAiScript",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.fragment.navigate",
                "title": "Navigate to fragment",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.fragment.reveal",
                "title": "Reveal fragment in tree",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.fragment.prompt",
                "title": "Run GenAiScript...",
                "category": "GenAIScript",
                "icon": "$(lightbulb)"
            },
            {
                "command": "genaiscript.prompt.navigate",
                "title": "Navigate to prompt",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.prompt.create",
                "title": "Create new script...",
                "icon": "$(add)",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.newfile.script",
                "title": "GenAiScript File",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.newfile.gpspec",
                "title": "GPSpec File",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.prompt.fork",
                "title": "Fork GenAiScript...",
                "category": "GenAIScript",
                "icon": "$(repo-forked)"
            },
            {
                "command": "genaiscript.prompt.unbuiltin",
                "title": "Move builtin to project",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.open",
                "title": "Open request or response",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.open.trace",
                "title": "Open Trace",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.open.output",
                "title": "Open Output",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.applyEdits",
                "title": "Apply Edits",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.request.status",
                "title": "Show information message about OpenAI request status",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.openIssueReporter",
                "title": "Report Issue...",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.retreival.search",
                "title": "Search",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.retreival.index",
                "title": "Index",
                "category": "GenAIScript"
            },
            {
                "command": "genaiscript.retreival.clear",
                "title": "Clear retreival index",
                "category": "GenAIScript"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "yarn run compile",
        "compile:extension": "esbuild src/extension.ts --sourcemap --bundle --format=cjs --platform=node --target=node20 --outfile=built/extension.js --external:vscode --external:pdfjs-dist --external:llamaindex",
        "compile": "yarn compile:extension",
        "lint": "eslint src --ext ts",
        "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ../sample",
        "typecheck": "tsc -p .",
        "prepackage": "zx prepackage.mjs",
        "postpackage": "zx postpackage.mjs",
        "package": "vsce package --dependencies --out genaiscript.vsix --yarn --pre-release",
        "package:insiders": "vsce package --dependencies --out genaiscript.insiders.vsix --yarn --pre-release"
    },
    "devDependencies": {
        "@types/isomorphic-fetch": "^0.0.39",
        "@types/mocha": "^10.0.6",
        "@types/vscode": "^1.86.0",
        "@typescript-eslint/eslint-plugin": "^7.0.1",
        "@typescript-eslint/parser": "^7.0.1",
        "@vscode/test-web": "^0.0.51",
        "@vscode/vsce": "^2.23.0",
        "assert": "^2.1.0",
        "dotenv": "^16.4.4",
        "eslint": "^8.56.0",
        "isomorphic-fetch": "^3.0.0",
        "mocha": "^10.3.0",
        "process": "^0.11.10",
        "ts-loader": "^9.5.1",
        "typescript": "^5.3.3",
        "vscode-uri": "^3.0.8",
        "websocket-polyfill": "^0.0.3",
        "zx": "^7.2.3"
    },
    "optionalDependencies": {
        "genaiscript-cli": "*",
        "genaiscript-core": "*"
    },
    "enabledApiProposals": [
        "chatAgents2",
        "chatRequestAccess"
    ]
}
