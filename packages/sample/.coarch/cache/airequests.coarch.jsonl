{"sha":"4ef145c6cca6dbd2fc96f17fd599d4e5fba06637c3236f132a13c35aa67745e5","key":{"template":{"id":"shorten","title":"Shorten"},"fragment":{"fullId":"src/image.coarch.md:11:0","hash":"a1e9101b18b16b54"}},"val":{"key":{"template":{"id":"shorten","title":"Shorten"},"fragment":{"fullId":"src/image.coarch.md:11:0","hash":"a1e9101b18b16b54"}},"response":{"edits":[{"label":"Update /workspaces/coarch/packages/sample/src/image.coarch.md","filename":"/workspaces/coarch/packages/sample/src/image.coarch.md","type":"replace","range":[[0,0],[38,0]],"text":"---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n"}],"fileEdits":{"/workspaces/coarch/packages/sample/src/image.coarch.md":{"before":"---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n","after":"---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n"}},"trace":"\n# Prompt trace\n\n\n\n## Prompt template \"Shorten\" (`shorten`)\n\n```````````````js\n  1: prompt({\n  2:     title: \"Shorten\",\n  3:     description: \"Shorten the summary of the fragment.\",\n  4: })\n  5: \n  6: $`Shorten the following FILE. Limit changes to minimum.`\n  7: \n  8: def(\"FILE\", env.file)\n  9: \n```````````````\n\n\n\n## console output\n> tip: use `console.log()` from prompt.js files\n## Expanded prompt\n\n```````````````markdown\nShorten the following FILE. Limit changes to minimum.\n\nFILE:\n````` file=/workspaces/coarch/packages/sample/src/image.coarch.md\n---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n`````\n```````````````\n\n\n## Variables\nVariables are referenced through `env.NAME` in prompts.\n\n-   env.**error**: `ERROR-JEKKFD`\n\n-   env.**links**\n```````````````js\n[ { label: \"node\",\n  filename: \"src/image.mjs\",\n  content: \"import fs from 'fs';\\nimport path from 'path';\\nimport sharp f\"... },\n{ label: \"genfiles.node/image.mjs\",\n  filename: \"src/genfiles.node/image.mjs\",\n  content: \"import fs from 'fs';\\nimport path from 'path';\\nimport sharp f\"... } ]\n```````````````\n\n-   env.**parents**\n```````````````js\n[  ]\n```````````````\n\n-   env.**fence**\n```````````````\n`````\n```````````````\n\n-   env.**promptOptions**\n```````````````js\n{  }\n```````````````\n\n-   env.**vars**\n```````````````js\n{  }\n```````````````\n\n-   env.**templates**\n```````````````js\n[ { id: \"genfiles.node\",\n  title: \"Generate Node.js Code (multifile)\",\n  description: undefined },\n{ id: \"gen-structure\",\n  title: \"Generate Project Structure\",\n  description: \"Generate project structure.\" },\n{ id: \"python\",\n  title: \"Generate Python Code\",\n  description: undefined },\n{ id: \"shorten.3.5\",\n  title: \"Shorten 3.5\",\n  description: \"Shorten the summary of the fragment using cheaper model.\" },\n{ id: \"shorten\",\n  title: \"Shorten\",\n  description: \"Shorten the summary of the fragment.\" },\n{ id: \"summarize-links\",\n  title: \"Summarize links\",\n  description: \"Expands contents from links and summarizes them\" },\n{ id: \"front-matter\",\n  title: \"Title and Description\",\n  description: undefined },\n{ id: \"feature\",\n  title: \"Generate BDD scenarios (.feature)\",\n  description: \"Generate a Gherkin feature file from the node and children.\" },\n{ id: \"technical\",\n  title: \"Technical proofreading\",\n  description: \"Review the text as a technical document writer.\" } ]\n```````````````\n\n-   env.**file**\n```````````````js\n{ filename: \"/workspaces/coarch/packages/sample/src/image.coarch.md\",\nlabel: \"current\",\ncontent: \"---\\ntitle: Image Resize Command Line Application\\ndescription\"... }\n```````````````\n\n-   env.**template**\n```````````````js\n{ id: \"shorten\",\ntitle: \"Shorten\",\ntext: \"<nothing yet>\",\njsSource: \"prompt({\\n    title: \\\"Shorten\\\",\\n    description: \\\"Shorten the\"...,\nfilename: \"/workspaces/coarch/packages/sample/prompts/style/shorten.pro\"...,\ndescription: \"Shorten the summary of the fragment.\",\ninput: \".md\" }\n```````````````\n\n## System prompt\n###  template: `system`\n\n```````````````js\n  1: systemPrompt({ title: \"System prompt\" })\n  2: \n  3: const folder =\n  4:     env.vars[\"system.multifile.outputFolder\"] ||\n  5:     env.template.outputFolder ||\n  6:     \".\"\n  7: $`You are concise. Answer in markdown.\n  8: \n  9: When generating files you will use the following syntax:`\n 10: \n 11: def(`File ${folder}/file1.ts`, `What goes in\\n${folder}/file1.ts.`)\n 12: def(`File ${folder}/file2.md`, `What goes in\\n${folder}/file2.md.`)\n 13: \n 14: $`When generating files, place files in folder \"${folder}\".`\n 15: \n 16: $`When explaining answers, take a deep breath.`\n 17: \n```````````````\n#### Expanded system prompt\n```````````````markdown\nYou are concise. Answer in markdown.\n\nWhen generating files you will use the following syntax:\n\nFile ./file1.ts:\n`````\nWhat goes in\n./file1.ts.\n`````\n\nFile ./file2.md:\n`````\nWhat goes in\n./file2.md.\n`````\n\nWhen generating files, place files in folder \".\".\n\nWhen explaining answers, take a deep breath.\n```````````````\n\n\n## Final prompt\n\n-  model: `gpt-4`\n-  temperature: 0.2\n-  max tokens: 800\n\n```````````````markdown\nShorten the following FILE. Limit changes to minimum.\n\nFILE:\n````` file=/workspaces/coarch/packages/sample/src/image.coarch.md\n---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n`````\n```````````````\n\n\n## AI Output\n\n\n```````````````markdown\nFile ./image.coarch.md:\n`````\n---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n`````\n```````````````\n\n\n### Extracted Variables\n\n-   `File ./image.coarch.md`\n`````md\n---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n\n`````\n\n","text":"File ./image.coarch.md:\n`````\n---\ntitle: Image Resize Command Line Application\ndescription: Develop a command line app for resizing images using Node.js LTS, optimal algorithms, and validation techniques.\nkeywords:\n  - image resize\n  - command line app\n  - Node.js\n  - image processing\n  - resizing algorithm\n---\n\n# Image resize\n\nA command line app that resizes images using the best algorithm. Use node.js LTS.\n\n* [node](./image.mjs)\n- [genfiles.node/image.mjs](./genfiles.node/image.mjs)\n\n## Parse command line arguments {#UV61}\nExtract file name, size, and output file name.\n\n## Validate Input {#QY23}\nCheck arguments, input file, dimensions, and output file name.\n\n## Load image {#MD29}\nLoad the image using a library.\n\n## Determine Optimal Algorithm {#KU58}\nSelect the best resizing algorithm.\n\n## Resize image {#OR24}\nResize the image to the specified size.\n\n## Save resized image {#IA42}\nSave the resized image to the output file name.\n\n## Display success message {#DT13}\nInform the user of the completed process and output file name.\n`````"}}}
